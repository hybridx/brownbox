!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);n(1),n(5);var r=document.querySelector("#offerings");r&&(r.innerHTML=[{icon:"fa-box-open",title:"Corrugated boxes",statement:"For packaging and shipment with single colour flexo printing."},{icon:"fa-truck-loading",title:"Duplex boxes",statement:"For products with offset printing and lamination."},{icon:"fa-scroll",title:"Corrugated sheets",statement:"for partitioning and other purposes"},{icon:"fa-toilet-paper",title:"Corrugated rolls",statement:"For cushioning and packaging of fragile products."},{icon:"fa-box",title:"Custom made solutions",statement:"For branding, packaging and shipment of your product folio."}].map((function(e){return'<div class="row mb-3">\n            <div class="col-1">\n              <i class="fas '.concat(e.icon,' fa-lg indigo-text"></i>\n            </div>\n            <div class="col-xl-10 col-md-11 col-10">\n              <h5 class="font-weight-bold mb-3">').concat(e.title,'</h5>\n              <p class="grey-text">').concat(e.statement,"</p>\n            </div>\n          </div>")})).join(""))},function(e,t,n){var r=n(2),o=n(3);"string"==typeof(o=o.__esModule?o.default:o)&&(o=[[e.i,o,""]]);var i={insert:"head",singleton:!1},a=(r(o,i),o.locals?o.locals:{});e.exports=a},function(e,t,n){"use strict";var r,o=function(){return void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r},i=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function l(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function c(e,t){for(var n={},r=[],o=0;o<e.length;o++){var i=e[o],c=t.base?i[0]+t.base:i[0],u=n[c]||0,s="".concat(c," ").concat(u);n[c]=u+1;var f=l(s),p={css:i[1],media:i[2],sourceMap:i[3]};-1!==f?(a[f].references++,a[f].updater(p)):a.push({identifier:s,updater:g(p,t),references:1}),r.push(s)}return r}function u(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var o=n.nc;o&&(r.nonce=o)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var a=i(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var s,f=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function p(e,t,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=f(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function d(e,t,n){var r=n.css,o=n.media,i=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var m=null,h=0;function g(e,t){var n,r,o;if(t.singleton){var i=h++;n=m||(m=u(t)),r=p.bind(null,n,i,!1),o=p.bind(null,n,i,!0)}else n=u(t),r=d.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=o());var n=c(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var o=l(n[r]);a[o].references--}for(var i=c(e,t),u=0;u<n.length;u++){var s=l(n[u]);0===a[s].references&&(a[s].updater(),a.splice(s,1))}n=i}}}},function(e,t,n){(t=n(4)(!1)).push([e.i,"@import url(https://fonts.googleapis.com/css2?family=Red+Hat+Display&display=swap);"]),t.push([e.i,"@media (min-width: 1000px){.hero img{height:750px}.types{grid-template-columns:1fr 1fr 1fr}}@media (max-width: 999px){.types{grid-template-columns:1fr 1fr}.hero img{height:500px}}@media (max-width: 450px){.gallery{-webkit-column-count:1;-moz-column-count:1;column-count:1;-webkit-column-width:100%;-moz-column-width:100%;column-width:100%}.hero img{height:340px}}@media (max-width: 400px){.btn.filter{padding-left:1.1rem;padding-right:1.1rem}}@media (max-width: 767.98px){.types{grid-template-columns:1fr}.timeline::before{left:8px}}@media (max-width: 767.98px){.timeline-element{width:100%;text-align:left;padding-left:2.5rem;padding-right:0}}@media (max-width: 767.98px){.timeline-element::before{top:1.25rem;left:1px}}@media (max-width: 767.98px){.timeline-element:nth-child(even){margin-left:0rem}}@media (max-width: 767.98px){.timeline-element{width:100%;text-align:left;padding-left:2.5rem;padding-right:0}}@media (max-width: 767.98px){.timeline-element:nth-child(even)::before{left:1px}}@media (max-width: 767.98px){.timeline-element::before{top:1.25rem}}html{scroll-behavior:smooth}nav{background:#ffffffcc;box-shadow:-6px 6px 11px 0px #0000004f}.hero img{max-height:720px;max-width:1110px}.types{display:grid;place-items:center}.types__card{padding:1.5rem;height:320px;max-width:340px}.types__card h5{margin-top:1.5rem}.types__card img{outline:2px solid white;outline-offset:-2px;max-height:200px;max-width:300px;width:100%}.types__card:hover{box-shadow:0 2px 4px -1px #00000033, 0 4px 5px 0 #00000024, 0 1px 10px 0 #0000001f}.gallery{-webkit-column-count:3;-moz-column-count:3;column-count:3;-webkit-column-width:33%;-moz-column-width:33%;column-width:33%}.gallery .pics{-webkit-transition:all 350ms ease;transition:all 350ms ease}.gallery .animation{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}button.close{position:absolute;right:0;z-index:2;padding-right:1rem;padding-top:.6rem}.remove-box-shadow{box-shadow:none}.timeline{position:relative;list-style:none;padding:1rem 0;margin:0}.timeline::before{content:'';position:absolute;left:50%;top:0;bottom:0;width:2px;margin-left:-1px;background-color:#50a1ff}.timeline-element{position:relative;width:50%;padding:1rem 0;padding-right:2.5rem;text-align:right}.timeline-element::before{content:'';position:absolute;right:-8px;top:1.35rem;display:inline-block;width:16px;height:16px;border-radius:50%;border:2px solid #50a1ff;background-color:#fff}.timeline-element:nth-child(even)::before{right:auto;left:-8px}.timeline-element:nth-child(even){margin-left:50%;padding-left:2.5rem;padding-right:0;text-align:left}.fa-play:before{margin-left:.3rem}.step{list-style:none;margin:0}.step-element{display:flex;padding:1rem 0}.step-number{position:relative;width:7rem;flex-shrink:0;text-align:center}.step-number .number{color:#bfc5ca;background-color:#eaeff4;font-size:1.5rem}.step-number .number{width:48px;height:48px;line-height:48px}.number{display:inline-flex;justify-content:center;align-items:center;width:38px;border-radius:10rem}.step-number::before{content:'';position:absolute;left:50%;top:48px;bottom:-2rem;margin-left:-1px;border-left:2px dashed #eaeff4}.step .step-element:last-child .step-number::before{bottom:1rem}.card{transition:all 320ms ease-in-out}.card.pricing-card:hover{box-shadow:3px 3px 7px #afafaf;transform:translate(-3px, -3px)}.carousel-caption{background:#06060661}.card-body.mb-1.striped ul{list-style:none}.card-body.mb-1.striped ul li{text-align:left}.logo-text{font-family:'Red Hat Display', sans-serif;font-size:2rem}.number{margin:1rem;width:9rem}copyright-x{--fontColor: #000000}\n",""]),e.exports=t},function(e,t,n){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(a=r,l=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),c="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(l),"/*# ".concat(c," */")),i=r.sources.map((function(e){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(e," */")}));return[n].concat(i).concat([o]).join("\n")}var a,l,c;return[n].join("\n")}(t,e);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var l=0;l<e.length;l++){var c=[].concat(e[l]);r&&o[c[0]]||(n&&(c[2]?c[2]="".concat(n," and ").concat(c[2]):c[2]=n),t.push(c))}},t}},function(e,t){!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(e,t){return!t||"object"!==n(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function i(e){var t="function"==typeof Map?new Map:void 0;return(i=function(e){if(null===e||(n=e,-1===Function.toString.call(n).indexOf("[native code]")))return e;var n;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return a(e,arguments,u(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),c(r,e)})(e)}function a(e,t,n){return(a=l()?Reflect.construct:function(e,t,n){var r=[null];r.push.apply(r,t);var o=new(Function.bind.apply(e,r));return n&&c(o,n.prototype),o}).apply(null,arguments)}function l(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}function c(e,t){return(c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var s=document.createElement("template");s.innerHTML="\n".concat("\n<style>\n:root {\n  --fontSize: 14px;\n  --fontColor: #72767B;\n}\n.copyright-section {\n\tfont-size: var(--fontSize, 14px);\n\tcolor: var(--fontColor, #72767B);\n}\n</style>","\n").concat('\n<div class="copyright-section">\n\t<span class="copyright">\n\t\t\tCopyright &copy; <span id="year"></span> <slot name="name">All rights reserved</slot>\n</div>',"\n");var f=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&c(e,t)}(p,e);var t,n,i,a,f=(t=p,n=l(),function(){var e,r=u(t);if(n){var i=u(this).constructor;e=Reflect.construct(r,arguments,i)}else e=r.apply(this,arguments);return o(this,e)});function p(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,p),f.call(this)}return i=p,(a=[{key:"connectedCallback",value:function(){var e=this.attachShadow({mode:"open"});e.appendChild(s.content.cloneNode(!0)),null===this.getAttribute("year")?e.getElementById("year").innerHTML=(new Date).getFullYear():e.getElementById("year").innerHTML=this.getAttribute("year")}}])&&r(i.prototype,a),p}(i(HTMLElement));window.customElements.define("copyright-x",f)}])}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,